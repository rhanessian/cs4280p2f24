<program>    ::= program <vars> <block>
<vars>       ::= empty | var <varList>
<varList>    ::= identifier, integer; | identifier, integer <varList>
<stats>      ::= <stat> <mStat>
<mStat>      ::= empty | <stat> <mStat>
<stat>       ::= <read> | <print> | <block> | <cond> | <iter> | <assign>
<block>      ::= start <vars> <stats> stop
<read>       ::= read identifier;
<print>      ::= print <exp>;
<cond>       ::= iff [ <exp> <relational> <exp> ] <stat>
<assign>     ::= set identifier <exp>;
<relational> ::= .le. | .ge. | .lt. | .gt. | ** | ~
<exp>        ::= <M> + <exp> | <M> - <exp> | <M>
<M>          ::= <N> % <M> | <N>
<N>          ::= <R> / <N> | -<N> | <R>
<R>          ::= (<exp>) | identifier | integer